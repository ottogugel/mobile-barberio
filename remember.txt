# Criar o projeto

npx create-expo-app@latest --template
Blank (Typescript)
Coloca o nome do projeto

Roda um npx expo start

Criar uma pasta src em seguida pasta App e criar um Home.tsx
dentro do App.Tsx deixar apenas o Home.

Instalando Lucide Icons 
rodando npm install lucide-react-native react-native-svg

Instalando Expo Router
colocando no app.json
"plugins": ["expo-router"]
rodando npx expo install expo-router

Instalando React Navigation (stack e native-stack)
npm install @react-navigation/stack
npm install @react-navigation/native-stack

Após instalar configurar uma pasta de routes com o index e o app.routes e também colocar o <Routes> no App.tsx

Instalando o React Native Calendars
npm i react-native-calendars

Instalando o axios.
npm install axios

Instalando o date-fns
npm install date-fns --save

import { format, parse, isValid } from 'date-fns';
import { ptBR } from 'date-fns/locale';

let formattedDate = null;

  if (selectedDate) {
    const parsed = parse(selectedDate, 'd/M/yyyy', new Date()); // aceita "6/5/2025"
    if (isValid(parsed)) {
      formattedDate = format(parsed, "dd 'de' MMMM 'de' yyyy", { locale: ptBR });
    }
  }


Sobre levar os dados durante a navegação.
No @types definir o que vai ser passado. 
step: 2 {
    selectedDate: string;
}

Enviar da página que você quer para a outra.
    const selectedDate = `${day.day}/${day.month}/${day.year}`;
    navigation.navigate('step2', { selectedDate });

Receber os dados na página que você.
import { RouteProp, useRoute } from "@react-navigation/native";

type RouteProps = RouteProp<RootStackParamList, "step2">;
const route = useRoute<RouteProps>();
const { selectedDate } = route.params;

E depois passe no componente 
<ResumeCard selectedDate={selectedDate} />



{/* Paginação Fictícia */}
        <View style={{ flexDirection: 'row', marginVertical: 20 }}>
          {[1, 2, 3, 4].map(step => (
            <View
              key={step}
              style={{
                width: 30,
                height: 30,
                borderRadius: 15,
                marginHorizontal: 5,
                backgroundColor: step === 3 ? "#3F88C5" : "#eee",
                justifyContent: "center",
                alignItems: "center"
              }}
            >
              <Text style={{ color: step === 3 ? "#fff" : "#000" }}>{step}</Text>
            </View>
          ))}
        </View>


// Tratamento de data/hora
2025-06-15T12:00:00
ANO-MES-DIATHH:MM